version: "3"

services:
  #######################################
  # Reverse proxy (Traefik)
  #######################################
  traefik:
    image: "traefik:v1.7"
    restart: always
    networks:
    - reverse-proxy
    command: -c /dev/null --web --docker --logLevel=DEBUG
    ports:
      - "${PORT:-80}:80"
      - "${RPROXY_PORT:-8888}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=false"

  #######################################
  # IAM (Keycloak) with its database
  #######################################
  keycloak:
    image: "jboss/keycloak:4.4.0.Final"
    restart: always
    networks:
    - reverse-proxy
    - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/"]
      interval: 25s
      timeout: 25s
      retries: 15
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
    labels:
      - "traefik.port=8080"
      - "traefik.frontend.rule=PathPrefix:/auth"
      - "traefik.docker.network=reverse-proxy"
      - "traefik.enable=true"
    depends_on:
    - postgres
    links:
    - postgres
  postgres:
    image: "postgres:11-alpine"
    restart: always
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
  mongodb:
    image: "mongo:4"
    restart: always
    volumes:
      - mongodb_data:/data/db

networks:
  keycloak-network:
  reverse-proxy:

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
